FROM nvidia/cuda:11.2.2-cudnn8-devel-ubuntu20.04

RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    cmake \
    curl \
    git \
    wget \
    unzip \
    ca-certificates \
    libjpeg-dev \
    libpng-dev \
    libxext-dev \
    libxrender1 \
    libsm6 \
    libglib2.0-dev \
    locales \
    openssh-client \
    python3.8 \
    python3.8-dev \
    python3-pip && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

RUN python3 -m pip install --no-cache-dir --upgrade pip setuptools

COPY set_env.sh /tmp/set_env.sh
RUN chmod +x /tmp/set_env.sh && /tmp/set_env.sh && rm /tmp/set_env.sh

# requirements
COPY requirements.txt /tmp/requirements.txt
RUN pip install -i https://pypi.tuna.tsinghua.edu.cn/simple --no-cache-dir -r /tmp/requirements.txt \
    && rm /tmp/requirements.txt

# tensorRT
COPY install_tensorrt.sh /install_tensorrt.sh
RUN chmod +x /install_tensorrt.sh && \
    /install_tensorrt.sh && \
    rm /install_tensorrt.sh

# opencv
COPY install_opencv.sh /install_opencv.sh
RUN chmod +x /install_opencv.sh && \
    /install_opencv.sh && \
    rm /install_opencv.sh

# protobuf
COPY install_protobuf.sh /install_protobuf.sh
RUN chmod +x /install_protobuf.sh && \
    /install_protobuf.sh && \
    rm /install_protobuf.sh

# torch
RUN pip install torch==1.9.1+cu111 torchvision==0.10.1+cu111 torchaudio==0.9.1 -f https://download.pytorch.org/whl/torch_stable.html --trusted-host pypi.org --trusted-host download.pytorch.org --trusted-host files.pythonhosted.org

# python
RUN ln -sf /usr/bin/python3.8 /usr/bin/python

EXPOSE 22
